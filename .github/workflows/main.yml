name: CI/CD Pipeline - Frontend

on:
  push:
    branches:
      - master
      - develop

jobs:
  version:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'

    - name: Configure Git
      run: |
          git config --global user.email "oscar.bautista@jobbusiness.pe"
          git config --global user.name "CI/CD Bot"

    - name: Install dependencies
      run: npm install

    - name: Bump version and generate changelog
      run: |
        npm run release
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        git push --follow-tags origin ${{ github.ref }}
        
  build:
    runs-on: ubuntu-latest
    needs: version

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'

    - name: Install dependencies
      run: npm install

    - name: Build Angular app
      run: |
       if [ "${{ github.ref }}" == "refs/heads/master" ]; then
        npm run build -- --configuration production
       elif [ "${{ github.ref }}" == "refs/heads/develop" ]; then
        npm run build -- --configuration staging
       fi

    - name: Verificar archivos generados
      run: ls -la ./dist/jbs-rest

    - name: Upload Build Artifact
      uses: actions/upload-artifact@v3
      with:
        name: frontend-artifact
        path: ./dist/jbs-rest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Download Build Artifact
      uses: actions/download-artifact@v3
      with:
        name: frontend-artifact

    - name: Install lftp
      run: sudo apt-get install lftp

    - name: List Built Files
      run: ls -la .

    - name: Deploy to appropriate server
      run: |
        if [ "${{ github.ref }}" == "refs/heads/master" ]; then
          lftp -e "set ftp:ssl-allow no;
          open -u ${{ secrets.FTP_USER }},${{ secrets.FTP_PASSWORD }} ${{ secrets.FTP_HOST }};
          
          cd /naruto.jobbusiness.pe;
          find . -not -name '.htaccess' -type f -delete;
          find . -not -name '.htaccess' -type d -empty -delete;
          mirror -R . /naruto.jobbusiness.pe;

          cd /soho.jobbusiness.pe;
          find . -not -name '.htaccess' -type f -delete;
          find . -not -name '.htaccess' -type d -empty -delete;
          mirror -R . /soho.jobbusiness.pe;

          cd /main.jobbusiness.pe;
          find . -not -name '.htaccess' -type f -delete;
          find . -not -name '.htaccess' -type d -empty -delete;
          mirror -R . /main.jobbusiness.pe;
          bye";
        
        elif [ "${{ github.ref }}" == "refs/heads/develop" ]; then
          lftp -e "set ftp:ssl-allow no;
          open -u ${{ secrets.FTP_USER }},${{ secrets.FTP_PASSWORD }} ${{ secrets.FTP_HOST }};
          
          cd /test.jobbusiness.pe;
          find . -not -name '.htaccess' -type f -delete;
          find . -not -name '.htaccess' -type d -empty -delete;
          mirror -R . /test.jobbusiness.pe;
          bye";
        fi