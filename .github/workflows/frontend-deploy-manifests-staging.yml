name: Frontend - Build & Deploy to Staging (GKE)

on:
  push:
    branches:
      - develop
    paths:
      - 'dockerfiles/frontend/**'
      - 'k8s-manifests/frontend/**'
      - 'package.json'
      - 'package-lock.json'
      - 'angular.json'
      - 'src/**'

jobs:
  build-and-deploy-staging:
    concurrency: frontend-staging-${{ github.ref }}
    runs-on: ubuntu-latest
    permissions:
      contents: write        # para poder hacer commit/push
      id-token: write        # OIDC → Workload Identity Federation
    env:
      IMAGE_NAME: oscar020/frontend
      PROJECT_ID: resturante-ccap
      GKE_CLUSTER: cluster-1
      GKE_LOCATION: europe-southwest1
      GSA_EMAIL: gke-deployer@resturante-ccap.iam.gserviceaccount.com
      WORKLOAD_IDENTITY_PROVIDER: projects/838506148899/locations/global/workloadIdentityPools/github-pool/providers/github-oidc

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Generate tags
      run: |
        IMAGE_TAG=$(date +%Y%m%d%H%M)-${GITHUB_SHA::7}
        STAGING_TAG=${IMAGE_TAG}-staging
        echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
        echo "STAGING_TAG=$STAGING_TAG" >> $GITHUB_ENV

    - name: Build and push image with -staging
      run: |
        docker build \
          --build-arg BUILD_CONFIG=staging \
          -t $IMAGE_NAME:$STAGING_TAG \
          -f ./dockerfiles/frontend/Dockerfile .
        docker push $IMAGE_NAME:$STAGING_TAG

    - name: Install kustomize
      run: |
        sudo apt-get update
        curl -s https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh | bash
        sudo mv kustomize /usr/local/bin/

    - name: Save latest image tag and update overlay (staging)
      run: |
        echo "$IMAGE_TAG" > latest-frontend-image-tag.txt

        pushd k8s-manifests/frontend/overlays/staging
        kustomize edit set image "$IMAGE_NAME=$IMAGE_NAME:$STAGING_TAG"
        popd

        git fetch origin develop && git checkout develop
        git config user.name  "ci-bot"
        git config user.email "ci@job.pe"
        git add latest-frontend-image-tag.txt k8s-manifests/frontend/overlays/staging/kustomization.yaml
        if ! git diff --cached --quiet; then
          git commit -m "ci(frontend): update staging image → $STAGING_TAG [skip ci]"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          git push origin develop
        fi

    - name: Auth to Google Cloud (WIF)
      uses: google-github-actions/auth@v2
      with:
        workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}
        service_account: ${{ env.GSA_EMAIL }}

    - name: Setup gcloud
      uses: google-github-actions/setup-gcloud@v2

    - name: Get GKE credentials
      uses: google-github-actions/get-gke-credentials@v2
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_LOCATION }}
        project_id: ${{ env.PROJECT_ID }}

    - name: Set image tag in overlay (staging)
      run: |
        kustomize edit set image $IMAGE_NAME=$IMAGE_NAME:$STAGING_TAG
      working-directory: k8s-manifests/frontend/overlays/staging

    - name: Commit updated kustomization.yaml
      run: |
        git config --global user.email "ci@job.pe"
        git config --global user.name "ci-bot"
        git pull origin develop
        git add k8s-manifests/frontend/overlays/staging/kustomization.yaml
        if ! git diff --cached --quiet; then
          git commit -m "ci(frontend): update kustomization.yaml with image $STAGING_TAG"
          git remote set-url origin https://x-access-token:${{ github.token }}@github.com/${{ github.repository }}
          git push origin develop
        else
          echo "No hay cambios en kustomization.yaml. Ya estaba actualizado."
        fi

    - name: Deploy to staging
      run: |
        kustomize build k8s-manifests/frontend/overlays/staging | kubectl apply -f -